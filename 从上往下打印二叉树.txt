/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    vector<int> PrintFromTopToBottom(TreeNode* root) {
        
       /* vector<int> v;
        //’ª
        if(root==nullptr)
            return v;
        stack<TreeNode*> s;
        TreeNode* cur=nullptr;
        s.push(root);
        v.push_back(root->val);
        while(!s.empty())
        {
            cur=s.top();
            s.pop();
            if(cur->left!=nullptr)
                v.push_back(cur->left->val);
            if(cur->right!=nullptr)
                v.push_back(cur->right->val);
            
            if(cur->right!=nullptr)
                s.push(cur->right);
            if(cur->left!=nullptr)
                s.push(cur->left);
        }
        
        return v;*/
         vector<int> v;
        //∂”¡–
        if(root==nullptr)
            return v;
        queue<TreeNode*> q;
        q.push(root);
        TreeNode* cur=nullptr;
        
        while(!q.empty())
        {
            cur=q.front();
            q.pop();

            v.push_back(cur->val);
            if(cur->left!=nullptr)
                q.push(cur->left);
            if(cur->right!=nullptr)
                q.push(cur->right);
        }
        return v;
    }
    
};